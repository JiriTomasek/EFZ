@using EFZ.Resources
@using Newtonsoft.Json
@model EFZ.WebApplication.Models.Settings.UserVm
<div data-role="page">
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
</div><div class="modal-header">

</div>
        <form asp-action="EditUser" asp-controller="Settings">
            <input asp-for="Id" type="hidden" />
            <input asp-for="AccessFailedCount" type="hidden" />
            <input asp-for="AuthenticationType" type="hidden" />
            <input asp-for="EmailConfirmed" type="hidden" />
            <input asp-for="IsAuthenticated" type="hidden" />
            <input asp-for="LockoutEnabled" type="hidden" />
            <input asp-for="LockoutEnd" type="hidden" />
            <input asp-for="NormalizedUserName" type="hidden" />
            <input asp-for="PasswordHash" type="hidden" />
            <input asp-for="PhoneNumber" type="hidden" />
            <input asp-for="PhoneNumberConfirmed" type="hidden" />
            <input asp-for="UserName" type="hidden" />
            <input asp-for="RolesIds" type="hidden" />
            <input asp-for="CustomerId" type="hidden" />
            @*<input id="RolesIds" type="hidden" />*@

          
            <div class="modal-body">

                <p id="messageToClient" class="text-danger"></p>
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="Email" class="control-label"></label>
                    <input asp-for="Email" class="form-control"  />
                    <span asp-validation-for="Email" class="text-danger"></span>
                </div>
                


                <div class="form-group">
                    <label asp-for="Roles" class="control-label"></label>
                    <div class="select-wrapper">
                        <span class="multi-role-select"></span>
                    </div>
                </div>
                <div class="form-group">
                    <label asp-for="Customer" class="control-label"></label>
                    <div class="select-wrapper">
                        <span class="customer-single-select"></span>
                    </div>
                </div>



            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary btn-close" data-dismiss="modal">@Html.Raw(Labels.valClose)</button>
                <input type="submit" class="btn btn-primary" value="@Html.Raw(Labels.valSave)" />
            </div>
        </form>
    
<script>
    @*$("#RolesIds").val(@Json.Serialize(@Model.Roles.Select(t=>t.Id)));*@
    var multiRole = new SelectPure(".multi-role-select", {
        options: [
            {
                label: "Admin",
                value: "1",
            },
            {
                label: "Member",
                value: "2",
            }
        ],
        value: @Json.Serialize(@Model.Roles.Select(t=>t.Id.ToString()).ToList()),
        multiple: true,
        icon: "fa fa-times",
        placeholder: @Json.Serialize(@LabelsMessages.valRoleSelect),
        onChange: value => { roleEditChange(value) },
        classNames: {
            select: "select-pure__select",
            dropdownShown: "select-pure__select--opened",
            multiselect: "select-pure__select--multiple",
            label: "select-pure__label",
            placeholder: "select-pure__placeholder",
            dropdown: "select-pure__options",
            option: "select-pure__option",
            autocompleteInput: "select-pure__autocomplete",
            selectedLabel: "select-pure__selected-label",
            selectedOption: "select-pure__option--selected",
            placeholderHidden: "select-pure__placeholder--hidden",
            optionHidden: "select-pure__option--hidden",
        }
    });


    var singleDeliveryCustomer = new SelectPure(".customer-single-select", {
        options: @Json.Serialize(@ViewBag.Customers),
        value:  @Json.Serialize(@Model.CustomerId.ToString()),
        placeholder: @Json.Serialize(@LabelsMessages.valCustomerSelect),
        onChange: value => { customerEditChange(value) },
        classNames: {
            select: "select-pure__select",
            dropdownShown: "select-pure__select--opened",
            multiselect: "select-pure__select--multiple",
            label: "select-pure__label",
            placeholder: "select-pure__placeholder",
            dropdown: "select-pure__options",
            option: "select-pure__option",
            autocompleteInput: "select-pure__autocomplete",
            selectedLabel: "select-pure__selected-label",
            selectedOption: "select-pure__option--selected",
            placeholderHidden: "select-pure__placeholder--hidden",
            optionHidden: "select-pure__option--hidden",
        }
    });

</script>